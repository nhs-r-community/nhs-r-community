{
  "hash": "ab58338735e8353a6144047f52174996",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Recoding an NA and back again\"\ndate: \"12 March 2024\"\ndate-modified: '12 March 2024'\ncategories:\n  - R tips\nauthor: Zoë Turner\nsubtitle: >\n  \"Replace NAs with `replace_na()` and code to NA with `na_if()`\"\ncode-annotations: below\n---\n\n## Create data\n\n\n\nThis was written originally in an Excel spreadsheet and used {datapasta} to copy into R as code to build the same data frame.\n{datapasta} can be access through RStudio as an Addin as well as code.\nFind out more about {datapasta} from the [Introduction to R and R Studio course](https://intro-r-rstudio.nhsrcommunity.com/session-datapasta.html#/title-slide).\n\n## Recoding to NA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey <- tibble::tribble(\n  ~Survey.Response, ~Code,\n       \"Response1\",   -9L,\n       \"Response2\",    2L,\n       \"Response3\",   10L,\n       \"Response4\",    0L,\n       \"Response5\",    5L,\n       \"Response6\",   -9L,\n        \"Missing\", NA\n  )\n```\n:::\n\n\n## Recode to NA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nsurvey |> \n  mutate(new_column = na_if(Code, -9))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 3\n  Survey.Response  Code new_column\n  <chr>           <int>      <int>\n1 Response1          -9         NA\n2 Response2           2          2\n3 Response3          10         10\n4 Response4           0          0\n5 Response5           5          5\n6 Response6          -9         NA\n7 Missing            NA         NA\n```\n\n\n:::\n:::\n\n\nIt's also possible to use the numbers and `case_when()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |> \n  mutate(new_column = case_when(Code < 0 ~ NA,  # <1>\n                                Code == 0 ~ 1000, # <2>\n                                .default = Code)) # <3>\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 3\n  Survey.Response  Code new_column\n  <chr>           <int>      <dbl>\n1 Response1          -9         NA\n2 Response2           2          2\n3 Response3          10         10\n4 Response4           0       1000\n5 Response5           5          5\n6 Response6          -9         NA\n7 Missing            NA         NA\n```\n\n\n:::\n:::\n\n\n1. Where `Code` is less than 0 then code to `NA`.\n2. Where `Code` is equal to 0 then recode to `1000` which is a number that will stand out.\n2. For everything else return the original data from column `Code`.\n\nOr `ifelse()` where there are only two options:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |> \n  mutate(new_column = ifelse(Code < 0, NA, Code))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 3\n  Survey.Response  Code new_column\n  <chr>           <int>      <int>\n1 Response1          -9         NA\n2 Response2           2          2\n3 Response3          10         10\n4 Response4           0          0\n5 Response5           5          5\n6 Response6          -9         NA\n7 Missing            NA         NA\n```\n\n\n:::\n:::\n\n\n\n## Recode from NA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey |> \n  mutate(new_column2 = replace_na(Code, 1000))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 3\n  Survey.Response  Code new_column2\n  <chr>           <int>       <int>\n1 Response1          -9          -9\n2 Response2           2           2\n3 Response3          10          10\n4 Response4           0           0\n5 Response5           5           5\n6 Response6          -9          -9\n7 Missing            NA        1000\n```\n\n\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}