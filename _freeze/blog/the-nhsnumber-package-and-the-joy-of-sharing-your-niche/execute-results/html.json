{
  "hash": "99a093dd94c2279a9472d78b1664aba1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"The 'nhsnumber' package and the joy of sharing your niche\"\ndate: \"19 July 2022\"\ndate-modified: \"27 July 2024\"\ncategories:\n  - NHS\n  - Package\nauthor: Mark Sellors\nimage: img/Numbers-600x350.jpg\nimage-alt: \"A board with numbers that move mechanically to change\"\nsubtitle: >\n---\n\nBeing the author of a package with tens of thousands of users must be incredibly rewarding. All those people getting value from your work and using it to do incredible things. Few of us will ever write a package that has that kind of reach though.\n\nMost of us must be content to give back to our communities in smaller ways.\n\nIn 2019 I was working for a company building software for Genomics England and the NHS. We had many conversations about NHS numbers and [NHS Spine](https://digital.nhs.uk/services/spine) and so on, and over time, I became interested in the numbers themselves.\n\nAs a manager, I wasn't directly involved in writing any code, but was still heavily involved in the R community in my free time. So I wrote some code to validate the checksums used by NHS numbers to get a better understanding of how they work and to play with some R.\n\nNHS numbers use a fairly simple format. The first 9 characters are the actual number and the 10th digit is a checksum. A checksum is some data that is used to verify another bit of data. In the case of NHS numbers, it's the last digit. That 10th digit is generated by an algorithm that takes the first 9 digits as it's input. This means you can check the validity of a number by taking the first 9 digits, computing the checksum and comparing that with the provided checksum. If they match, the number is valid.\n\nTaken together, all 10 digits form the complete NHS number.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nhsnumber)\n\n## Warning: package 'nhsnumber' was built under R version\n## 4.1.3\n\n# Take a made up number and generate a checksum\nget_checksum(123456788, full_output = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1234567881\n```\n\n\n:::\n\n```{.r .cell-code}\n# Take that output and a version of the same input number with an\n# incorrect checksum and test their validity\nis_valid(c(1234567881, 1234567882))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  TRUE FALSE\n```\n\n\n:::\n:::\n\n\nCredit card numbers, and many other numbers found out in the wild, use the same technique, though often with different algorithms (the [Luhn algorithm](https://en.wikipedia.org/wiki/Luhn_algorithm) in the case of credit card numbers). This makes it possible for us to validate the legitimacy of numbers before we pass them on to upstream services for final validation and association with the human it was assigned to..\n\nOf course, in most cases, the algorithms are well known, and there's nothing to stop people generating fake numbers that pass checksum validation. However, this early stage checksum validation can be used to flag typos and transcription errors in a number, or weed out obvious chancers.\n\nOnce I had an implementation figured out, I wrapped it up into an R package, dropped it on GitHub, tweeted about it…\n\n …and then promptly forgot about it.\n\nOver the years I've [written](https://github.com/sellorm/memorids) a [lot of](https://github.com/sellorm/qsimage) [super-niche](https://github.com/sellorm/rsay) and [one-off](https://github.com/sellorm/ekl) R [packages](https://github.com/sellorm/cranq) , principally for my own entertainment, and this felt like another one of those.\n\nCut to a year later and I'm working for [RStudio](https://rstudio.com/), helping out a little at [Data Orchard](https://www.dataorchard.org.uk/) and spending a lot of time thinking about the data science community and ways to give back to the community that's always been so generous to me. It was at this point that I decided to make the effort to publish the package to CRAN.\n\nGetting your first package on CRAN can be a nerve wracking experience, but it was a fairly smooth process, with only small changes required by the CRAN team before it could be published.\n\nWhen you publish any package, you never really know if anyone will use it. You're pushing your work out into the world to see if it can survive on its own. After [nhsnumber](https://cran.r-project.org/package=nhsnumber) was published, I would occasionally [check its stats](https://cranlogs.r-pkg.org/downloads/total/last-month/nhsnumber) and see low, but consistent numbers of downloads. A couple of times since it was published, actual users have reached out to say thanks or report a bug.\n\nAs a stats-first language rather than a general purpose one, some might say that R is itself, somewhat niche (though a pretty large niche, it must be said!). Add to that a package that only makes sense in one geographic region and is also specific to those working within and alongside one specific organisation within that region and we're knee-deep in niches! Clearly this sort of package is never going to be applicable to all R users.\n\nBut none of that means a package isn't valuable. If only one user benefits from its existence I'd consider that a success. If your work can serve a community, however small, and help improve their work in some way, I consider that a win. So, if like me, you have ideas for R packages, but you consider them too niche to be worth the time, I'd encourage you to share them in some way anyway. You'll learn a lot along the way, maybe have a bit of fun thinking about how best to organise and present your package and may, just may, improve someone else's life along the way.\n\nHappy coding everyone!\n\nMark\n\nPS. Because of the interest shown in the nhsnumber R package by the NHS-R community, I decided it would be fun to [port the package to Python too](https://pypi.org/project/nhssums/).\n\nMark Sellors is a technologist working in the data science and technical computing space. He is the author of several niche packages for R as well as the [Field Guide To The R Ecosystem](https://fg2re.sellorm.com/). By day he works as a Solutions Engineering Manager at RStudio, is a Non-executive director at Data Orchard and the founder of the R4pi.org project.\n\nThe other R packages that Mark has published to CRAN are:\n\n-   [envstat](https://cran.r-project.org/package=envstat): Configurable reporting for your compute environment\n\n-   [rlog](https://cran.r-project.org/package=rlog): Simple, opinionated logging for your R scripts and Shiny apps\n\nYou can find Mark on [Twitter](https://twitter.com/sellorm) and [LinkedIn](https://www.linkedin.com/in/msellors/) and read his [infrequently updated blog](https://blog.sellorm.com/).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}