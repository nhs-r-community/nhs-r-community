{
  "hash": "305c98935b5911d4f56e0d84c448870a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Building the ONS mortality dataset\"\nsubtitle: \"Taking the data from a wide format spreadsheet to a tidy long table\"\ndate: \"23 04 2020\"\ncategories:\n  - Data\n  - Packages\n  - Training\n  - dplyr\n  - Functions\n  - Loops\n  - Web scraping\nauthor: ZoÃ« Turner\nimage: img/typewriter.jpg\nimage-alt: \"Photo of an old typewriter with the paper ready to be typed on\"\nexecute:\n  eval: false\n---\n\nThis blog was originally a vignette for the NHSRdatasets package that I wrote when I had only been using R for about a year and I found myself contributing to a package! \nI produced this vignette which detailed all the laborious steps I took to take the wide data sets for provisionally recorded deaths up to 2019 and made them long form. \n\nI had been using these spreadsheets regularly for a mortality report in the Trust I worked in, but this data became incredibly important from 2020 (as well as changed format yet again) and so I'm sure there are better way to clean it and would be much easier to find than it was back before 2020.\nFor the sake of transparency and showing how code changes over time I'm going to share it in its original state here and perhaps it can be its own training challenge as you free to improve or correct things that inevitably go out of date.\n\nThe data output stored in NHSRdatasets won't be changed and instead will have vignettes built to use the data and help explain and explore it. \n\n## The original vignette\n\nThis vignette details why and how the `ons_mortality` dataset was created.\n\nThe data were pulled together from the weekly xls spreadsheets provided by the Office of National Statistics (ONS) from 2010 to 2019 for training purposes and is a static data set.  \n\nData is released every Friday and includes provisionally registered deaths for England and Wales for:\n\n- Total, all deaths\n- regions of usual residence\n- age bands (persons and for males/females) \n- by underlying cause 'All respiratory diseases' (the methodology has changed over the years, see the subsection for more information)\n\n### Further notes taken from the spreadsheet:\n\n1 This average is based on the actual number of death registrations recorded for each corresponding week over the previous five years. Moveable public holidays, when register offices are closed, affect the number of registrations made in the published weeks and in the corresponding weeks in previous years.\t\t\t\t\t\t\n\t\t\t\t\t\t\n2 Counts of deaths by underlying cause exclude deaths at age under 28 days.\t\t\t\t\t\t\n\t\t\t\t\t\t\n3 Coding of deaths by underlying cause for the latest week is not yet complete.\t\t\t\t\t\t\n\t\t\t\t\t\t\n4 Does not include deaths where age is either missing or not yet fully coded. For this reason counts of 'Persons', 'Males' and 'Females' may not sum to 'Total Deaths, all ages'.\t\t\t\t\t\t\n\t\t\t\t\t\t\n5 Does not include deaths of those resident outside England and Wales or those records where the place of residence is either missing or not yet fully coded. For this reason counts for \"Deaths by Region of usual residence\" may not sum to \"Total deaths, all ages\".\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n### Later confirmation of deaths\t\t\t\t\t\n\nAggregate numbers of deaths are later confirmed and released in by [ONS monthly](https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/deaths/datasets/monthlyfiguresondeathsregisteredbyareaofusualresidence). Numbers are released at a lower geographical level to the weekly data. \n\n## Preparation of data\n\nIn order to prepare this data for analysis the worksheet for weekly figures was extracted and the data was moved to long form and merged together over the available years. This was extracted in April 2020 when full previous years' data was available.\n\nThe dataset contains:\n\n- __category_1:__ character, containing the names of the groups for counts, e.g. \"Total deaths\", \"all ages\".\n- __category_2:__ character, subcategory of names of groups where necessary, e.g. details of region: \"East\", details of age bands \"15-44\".\n- __counts:__ numeric, numbers of deaths in whole numbers and average numbers with decimal points. To retain the integrity of the format this column data is left as character.\n- __date:__ date, format is yyyy-mm-dd; all dates are a Friday.\n- __week_no:__ integer, each week in a year is numbered sequentially.\n\n# Source and licence acknowledgement\n\nThis data has been made available through Office of National Statistics under the [Open Government\nLicence](http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/).\n\nThe main page for downloads is found on the [ONS People Population and Community pages](https://www.ons.gov.uk/peoplepopulationandcommunity/birthsdeathsandmarriages/deaths/datasets/weeklyprovisionalfiguresondeathsregisteredinenglandandwales).\n\n## Creating the dataset\n\nSpreadsheets are in xls format from 2010 to 2019.\n\nEach week is released with a new file name listing the week number and all weeks for that year are included in the spreadsheet. Counts for weeks ahead are missing and listed as NA. \n\nWhen a year has passed it is renamed to the year name and does not change.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2019\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2019/publishedweek522019.xls\",\n  destfile = \"2019Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n\n# 2018\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2018/publishedweek522018withupdatedrespiratoryrow.xls\",\n  destfile = \"2018Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n\n# 2017\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2017/publishedweek522017.xls\",\n  destfile = \"2017Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n\n# 2016\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2016/publishedweek522016.xls\",\n  destfile = \"2016Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n\n# 2015\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2015/publishedweek2015.xls\",\n  destfile = \"2015Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n\n# 2014\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2014/publishedweek2014.xls\",\n  destfile = \"2014Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n\n# 2013\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2013/publishedweek2013.xls\",\n  destfile = \"2013Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n\n# 2012\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2012/publishedweek2012.xls\",\n  destfile = \"2012Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n\n# 2011\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2011/publishedweek2011.xls\",\n  destfile = \"2011Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n\n# 2010\ndownload.file(\n  \"https://www.ons.gov.uk/file?uri=%2fpeoplepopulationandcommunity%2fbirthsdeathsandmarriages%2fdeaths%2fdatasets%2fweeklyprovisionalfiguresondeathsregisteredinenglandandwales%2f2010/publishedweek2010.xls\",\n  destfile = \"2010Mortality.xls\",\n  method = \"wininet\",\n  mode = \"wb\")\n```\n:::\n\n\n## Extracting worksheets to csv\n\nThe data can be found in the worksheet called Weekly figures \"date/year\". Other worksheets in spreadsheets 2010 to 2019 are:\n\n- Contents\n- Information\n- Terms and conditions\n- Weekly figures <year>\n- Related publications\n\nThe following code finds the tab name and then creates a csv file for each tab/worksheet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\n\nfiles_list <- list.files(path = \"working_files\",\n                         pattern = \"*.xls\",\n                         full.names = TRUE)\n\n\nread_then_csv <- function(sheet, path) {\n  pathbase <- path %>%\n    basename() %>%\n    tools::file_path_sans_ext()\n  path %>%\n    read_excel(sheet = sheet) %>%\n    write_csv(paste0(pathbase, \"-\", sheet, \".csv\"))\n}\n\n\nfor(j in 1:length(files_list)){\n\n  path <- paste0(files_list[j])\n\n  path %>%\n    excel_sheets() %>%\n    set_names() %>%\n    map(read_then_csv, path = path)\n}\n```\n:::\n\n\n\n\n## Loading the weekly figure worksheets\n\nFrom 2010 to 2015 the tab name was Weekly Figures then it changed capitalisation to Weekly figures.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles_list_sheets <- list.files(path = \"working_files\",\n                         pattern = \"Weekly\",\n                         full.names = TRUE\n                         )\n\nfor(i in files_list_sheets) {\n\n  x <- read_csv((i), col_types = cols(.default = col_character()))\n\n  assign(i, x)\n}\n```\n:::\n\n\n## Format data functions\n\nTwo functions were required to format the spreadsheets as there were changes to the layout from 2016.\n\nPackages used: \n\n- __janitor:__ a specific package for cleaning data from Excel used here to remove the blank lines and columns, convert Excel serial numbers to dates and to format all column headers by removing spaces in those header names and removing capitalisation.\n- __dplyr:__ specifically dplyr for data manipulation (already loaded earlier). \n- __tidyr:__ for pivoting data from wide to long. \n- __stringi:__ a package to works with strings and was used to find certain characters or words.\n- __lubridate:__ a package to work with dates and used here to format dates to the same format.\n\n### 2010 - 2015\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(janitor)\nlibrary(tidyr)\nlibrary(stringi)\nlibrary(lubridate)\n\n# Column names that are not related to data points to be removed. This is the same for all years' spreadsheets.\n# Note that single quotes are used for the categories as one sentence includes '' in the text (4). \n\nremove_lookup <- c('week over the previous five years1',\n  'Deaths by underlying cause2,3',\n  'Footnotes',\n  '1 This average is based on the actual number of death registrations recorded for each corresponding week over the previous five years. Moveable public holidays, when register offices are closed, affect the number of registrations made in the published weeks and in the corresponding weeks in previous years.',\n  '2 Counts of deaths by underlying cause exclude deaths at age under 28 days.',\n  '3 Coding of deaths by underlying cause for the latest week is not yet complete.',\n  \"4Does not include deaths where age is either missing or not yet fully coded. For this reason counts of 'Persons', 'Males' and 'Females' may not sum to 'Total Deaths, all ages'.\",\n  '5 Does not include deaths of those resident outside England and Wales or those records where the place of residence is either missing or not yet fully coded. For this reason counts for \"Deaths by Region of usual residence\" may not sum to \"Total deaths, all ages\".',\n  'Source: Office for National Statistics',\n  'Deaths by age group'\n)\n\nformatFunction <- function(file){\n\nONS <- file %>%\n  clean_names %>%\n  remove_empty(c(\"rows\",\"cols\")) %>%\n  filter(!contents %in% remove_lookup) %>%\n  \n  # useful categories are found in the column contents but also include the footnote number\n  mutate(Category = case_when(is.na(x2) & str_detect(contents, \"Region\") ~ \"Region\",\n                              is.na(x2) & str_detect(contents, \"Persons\") ~ \"Persons\",\n                              is.na(x2) & str_detect(contents, \"Females\") ~ \"Females\",\n                              is.na(x2) & str_detect(contents, \"Males\") ~ \"Males\")\n  ) %>%\n  select(contents, Category, everything()) %>%\n  \n  # to ensure data like Persons, Males and Females \n  fill(Category) %>%\n  \n  # categories with Persons, Males and Females in the original column do not correspond directly to data points (wide form data) so are removed by referring to str_detect to find the word\n  filter(!str_detect(contents, \"Persons\"),\n         !str_detect(contents, \"Males\"),\n         !str_detect(contents, \"Females\")) %>%\n  \n  # the two columns for Category and contents are merged to Categories to bring the Category column first. Some categories don't have subcategories and these are preceded by NA_ with this merge\n  unite(\"Categories\", Category, contents) %>%\n  filter(Categories != \"Region_Deaths by Region of usual residence 5\") %>%\n  \n  # the NA_ is removed from some of the category names\n  mutate(Categories = case_when(str_detect(Categories, \"NA_\") ~ str_replace(Categories, \"NA_\", \"\"),\n                                TRUE ~ Categories))\n\n  # Push date row to column names\nonsFormattedJanitor <- row_to_names(ONS, 3)\n\n  # move data from wide to long form using pivot_longer\nx <- onsFormattedJanitor %>%\n  pivot_longer(cols = -`Week ended`,\n               names_to = \"allDates\",\n               values_to = \"counts\") %>%\n  \n  # some spreadsheets import with Excel serial numbers for dates and others as dates, janitor is used to correct this\n  mutate(realDate = dmy(allDates),\n         ExcelSerialDate = case_when(stri_length(allDates) == 5 ~ excel_numeric_to_date(as.numeric(allDates), date_system = \"modern\")),\n         date = case_when(is.na(realDate) ~ ExcelSerialDate,\n                          TRUE ~ realDate)) %>%\n  group_by(`Week ended`) %>%\n  \n  # the week number is replaced as this was lost with the moving of dates to the column headers\n  mutate(week_no = row_number()) %>%\n  ungroup() %>%\n  \n  # Category is a staging name as this is followed by a splitting of the column into category_1 and category_2\n  rename(Category = `Week ended`) %>%\n  \n  # to split the columns there are various characters used as a split point \",\", \"-\", and \":\" in the respiratory category the version is denoted by \"v\"\n  mutate(category_1 = case_when(str_detect(Category, \",\") ~\n                                  substr(Category,1,str_locate(Category, \",\") -1),\n                                str_detect(Category, \":\") ~\n                                  substr(Category,1,str_locate(Category, \":\") -1),\n                                str_detect(Category, \"_\") ~\n                                  substr(Category,1,str_locate(Category, \"_\") -1),\n                                str_detect(Category, \"respiratory\")  ~\n                                  \"All respiratory diseases (ICD-10 J00-J99) ICD-10\"),\n         category_2 = case_when(str_detect(Category, \",\") ~\n                                  substr(Category,str_locate(Category, \", \") +2, str_length(Category)),\n                                str_detect(Category, \":\") ~\n                                  substr(Category,str_locate(Category, \": \") +2, str_length(Category)),\n                                str_detect(Category, \"_\") ~\n                                  substr(Category,str_locate(Category, \"_\") +1, str_length(Category)),\n                                str_detect(Category, \"respiratory\")  ~\n                                  substr(Category,str_locate(Category, \"v\"), str_length(Category)) ),\n         \n         # the data for Total deaths: average of corresponding week over the previous 5 years is split over two cells in the spreasheet\n         category_2 = recode(category_2,\n                             \"average of corresponding\" = \"average of same week over 5 years\")) %>%\n  select(category_1,\n         category_2,\n         counts,\n         date,\n         week_no\n         ) %>%\n  \n  # 2011 requires this code to remove rows where there are no counts and because there are 2 rows relating to respiratory death numbers (see the Respiratory section) the previous methodology has been included in the spreadsheet with : for counts. This code does not affect other years' data/\n  filter(!is.na(counts),\n         counts != \":\") %>%\n  fill(category_1)\n\nreturn(x)\n\n}\n\nMortality2010 <- formatFunction(`working_files/Weekly/2010Mortality-Weekly Figures 2010.csv`)\n\n# 2011 has two lines relating to respiratory, v 2001 only has one data point and the rest of the year is 2010\nMortality2011 <- formatFunction(`working_files/Weekly/2011Mortality-Weekly Figures 2011.csv`) %>%\n  mutate(category_2 = case_when(is.na(category_2) & category_1 == \"All respiratory diseases (ICD-10 J00-J99) ICD-10\" ~ \"v 2010\",\n                                TRUE ~ category_2))\n\nMortality2012 <- formatFunction(`working_files/Weekly/2012Mortality-Weekly Figures 2012.csv`)\nMortality2013 <- formatFunction(`working_files/Weekly/2013Mortality-Weekly Figures 2013.csv`)\nMortality2014 <- formatFunction(`working_files/Weekly/2014Mortality-Weekly Figures 2014.csv`)\nMortality2015 <- formatFunction(`working_files/Weekly/2015Mortality-Weekly Figures 2015.csv`)\n```\n:::\n\n\n#### Format data 2016 - 2019\n\n\n::: {.cell}\n\n```{.r .cell-code}\nformatFunction2016 <- function(file){\n\n  ONS <- file %>%\n    clean_names %>%\n    \n    # An extra column has been added for region codes (not included in the dataset) meaning contents are now found in the janitor generated column name x2\n    mutate(x2 = case_when(is.na(x2) ~ contents,\n                              TRUE ~ x2)) %>%\n    remove_empty(c(\"rows\",\"cols\")) %>%\n    select(-contents) %>%\n    filter(!x2 %in% remove_lookup) %>%\n    \n    # Region has changed to region\n    mutate(Category = case_when(is.na(x3) & str_detect(x2, \"region\") ~ \"Region\",\n                                is.na(x3) & str_detect(x2, \"Persons\") ~ \"Persons\",\n                                is.na(x3) & str_detect(x2, \"Females\") ~ \"Females\",\n                                is.na(x3) & str_detect(x2, \"Males\") ~ \"Males\",\n                                TRUE ~ NA_character_)\n    ) %>%\n    select(x2, Category, everything()) %>%\n    fill(Category) %>%\n    filter(!str_detect(x2, 'Persons'),\n           !str_detect(x2, 'Males'),\n           !str_detect(x2, 'Females')) %>%\n    unite(\"Categories\", Category, x2) %>%\n    filter(Categories != 'Region_Deaths by Region of usual residence 5') %>%\n    mutate(Categories = case_when(str_detect(Categories, \"NA_\") ~ str_replace(Categories, \"NA_\", \"\"),\n                                  TRUE ~ Categories))\n\n  # Push date row to column names\n  onsFormattedJanitor <- row_to_names(ONS, 3)\n\n  # move data from wide to long form using pivot_longer\n  x <- onsFormattedJanitor %>%\n    pivot_longer(cols = -`Week ended`,\n                 names_to = \"allDates\",\n                 values_to = \"counts\") %>%\n    mutate(realDate = dmy(allDates),\n           ExcelSerialDate = case_when(stri_length(allDates) == 5 ~ excel_numeric_to_date(as.numeric(allDates), date_system = \"modern\")),\n           date = case_when(is.na(realDate) ~ ExcelSerialDate,\n                            TRUE ~ realDate)) %>%\n    group_by(`Week ended`) %>%\n    mutate(week_no = row_number()) %>%\n    ungroup() %>%\n    rename(Category = `Week ended`) %>%\n    mutate(category_1 = case_when(str_detect(Category, \",\") ~\n                                  substr(Category,1,str_locate(Category, \",\") -1),\n                                str_detect(Category, \":\") ~\n                                  substr(Category,1,str_locate(Category, \":\") -1),\n                                str_detect(Category, \"_\") ~\n                                  substr(Category,1,str_locate(Category, \"_\") -1),\n                                str_detect(Category, \"respiratory\")  ~\n                                  \"All respiratory diseases (ICD-10 J00-J99) ICD-10\"),\n         category_2 = case_when(str_detect(Category, \",\") ~\n                                  substr(Category,str_locate(Category, \", \") +2, str_length(Category)),\n                                str_detect(Category, \":\") ~\n                                  substr(Category,str_locate(Category, \": \") +2, str_length(Category)),\n                                str_detect(Category, \"_\") ~\n                                  substr(Category,str_locate(Category, \"_\") +1, str_length(Category)),\n                                str_detect(Category, \"respiratory\")  ~\n                                  substr(Category,str_locate(Category, \"v\"), str_length(Category)) ),\n         category_2 = recode(category_2,\n                             \"average of corresponding\" = \"average of same week over 5 years\")) %>%\n    select(category_1,\n           category_2,\n           counts,\n           date,\n           week_no\n    ) %>%\n    filter(!is.na(counts)) \n\n  return(x)\n\n}\n\n\nMortality2016 <- formatFunction2016(`working_files/Weekly/2016Mortality-Weekly figures 2016.csv`)\nMortality2017 <- formatFunction2016(`working_files/Weekly/2017Mortality-Weekly figures 2017.csv`)\nMortality2018 <- formatFunction2016(`working_files/Weekly/2018Mortality-Weekly figures 2018.csv`)\nMortality2019 <- formatFunction2016(`working_files/Weekly/2019Mortality-Weekly figures 2019.csv`)\n```\n:::\n\n\n## Bind together \n\n\n::: {.cell}\n\n```{.r .cell-code}\nons_mortality <- do.call(\"rbind\", list(\n                      Mortality2010,\n                      Mortality2011,\n                      Mortality2012,\n                      Mortality2013,\n                      Mortality2014,\n                      Mortality2015,\n                      Mortality2016,\n                      Mortality2017,\n                      Mortality2018,\n                      Mortality2019))\n```\n:::\n\n\n## Load the data \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(NHSRdatasets)\nlibrary(dplyr)\n\ndata(\"ons_mortality\")\n```\n:::\n\n\n## Respiratory\n\nDeaths by underlying cause of respiratory diseases All respiratory diseases (ICD-10 J00-J99) appear as:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nons_mortality %>% \n  mutate(year = year(date)) %>% \n  select(year, category_1, category_2) %>% \n  group_by(year, category_1, category_2) %>% \n  filter(category_1 == 'All respiratory diseases (ICD-10 J00-J99) ICD-10') %>% \n  slice(1)\n```\n:::\n\n\nNotes from the spreadsheets in relation to these methodology changes:\n\n### 2011 \n\n* Respiratory deaths for 2011 are coded to the new version of ICD-10 while for 2010 they are coded to the previous version. Week 1 2011 has been coded to both versions to give an indication of the impact of the change.\t\t\t\t\t\t\n\t\t\t\t\t\n### 2014\n\n* For deaths registered from January 2014, cause of death is coded to the ICD-10 classification using IRIS software. Further information about the implementation of the software is available on the ONS website. \t\t\t\t\t\t\n\n* All deaths registered in week 2 were dual-coded using both ICD-10 v2010 (NCHS) and ICD-10 v2013 (IRIS). An information note providing the preliminary findings on the impact of the implementation of IRIS software for ICD-10 cause of death coding on mortality statistics in England and Wales is available on the ONS website.\t\t\t\t\t\t\n\n### 2015\n\n* For deaths registered from January 2014, cause of death is coded to the ICD-10 classification using IRIS software. Further information about the [implementation of the software](https://webarchive.nationalarchives.gov.uk/20160106020045/http://www.ons.gov.uk/ons/guide-method/user-guidance/health-and-life-events/Changes-to-cause-of-death-coding-in-England-and-Wales/index.html) is available on the ONS website.\t\t\t\t\t\t\n\t\t\t\t\t\n## Age bands\n\nNumbers are provided for categories: Persons, Females and Males. \n\nAs detailed in the notes, if the age is missing or not coded at the time of release then the counts of 'Persons', 'Males' and 'Females' may not sum to 'Total Deaths, all ages'.\t\t\t\t\t\t\n\nNote that these age bands were changed in 2020 releases.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nons_mortality %>% \n  select(category_1, category_2) %>% \n  group_by(category_1, category_2) %>% \n  filter(category_1 %in% c('Persons','Females','Males')) %>% \n  slice(1)\n```\n:::\n\n\n\n## Remove working_files folder\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunlink(\"working_files\", recursive = TRUE)\n```\n:::\n\n\n\n# Citations\n\nThe data used to build the mortality dataset in this package is released under Â© Crown copyright and is free to use under the terms of the Open Government Licence. \nAny subsequent use should include a source accreditation to ONS - Source: Office for National Statistics licensed under the Open Government Licence.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}