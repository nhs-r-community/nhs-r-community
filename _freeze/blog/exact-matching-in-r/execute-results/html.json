{
  "hash": "6a39690b17c45cd7ac2029d15b61d951",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Exact Matching in R\"\ndate: \"30 July 2019\"\ndate-modified: \"10 July 2024\"\ncategories:\n  - R tips\n  - Statistics\n  - data.table\n  - Data\nauthor: Dan Lewer\nsubtitle: >\n  \"A case study of the health and care costs associated with living alone, using linked data from the London Borough of Barking & Dagenham\"\n---\n\nI've been working with a group of analysts in East London who are interested in joined-up health and social care data. They've created a powerful, unique dataset that shows how each resident of the [London Borough of Barking & Dagenham interacts with NHS and council services](https://www.health.org.uk/improvement-projects/building-analyst-capabilities-to-demonstrate-the-value-of-connected-health-and). The possibilities are enormous, both in terms of understanding the way that people use services across a whole system, and for more general public health research.\n\nYou can download a sample of the data <https://nhsrcommunity.com/wp-content/uploads/2019/07/sample_lbbd_dataset.csv>\n\nToday we're interested in whether social isolation is related to healthcare costs, and we're going to use **exact matching** to explore this issue. Our theory is that people who live alone have higher healthcare costs because they have less support from family members.\n\nHere's an extract from the data. â€˜Total cost' means the cost of health and social care in one year. The actual dataset has many more variables!\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ktwcqkhjih\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ktwcqkhjih table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ktwcqkhjih thead, #ktwcqkhjih tbody, #ktwcqkhjih tfoot, #ktwcqkhjih tr, #ktwcqkhjih td, #ktwcqkhjih th {\n  border-style: none;\n}\n\n#ktwcqkhjih p {\n  margin: 0;\n  padding: 0;\n}\n\n#ktwcqkhjih .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ktwcqkhjih .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ktwcqkhjih .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ktwcqkhjih .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ktwcqkhjih .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ktwcqkhjih .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ktwcqkhjih .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ktwcqkhjih .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ktwcqkhjih .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ktwcqkhjih .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ktwcqkhjih .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#ktwcqkhjih .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ktwcqkhjih .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ktwcqkhjih .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ktwcqkhjih .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktwcqkhjih .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ktwcqkhjih .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ktwcqkhjih .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ktwcqkhjih .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktwcqkhjih .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ktwcqkhjih .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktwcqkhjih .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#ktwcqkhjih .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktwcqkhjih .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ktwcqkhjih .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ktwcqkhjih .gt_left {\n  text-align: left;\n}\n\n#ktwcqkhjih .gt_center {\n  text-align: center;\n}\n\n#ktwcqkhjih .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ktwcqkhjih .gt_font_normal {\n  font-weight: normal;\n}\n\n#ktwcqkhjih .gt_font_bold {\n  font-weight: bold;\n}\n\n#ktwcqkhjih .gt_font_italic {\n  font-style: italic;\n}\n\n#ktwcqkhjih .gt_super {\n  font-size: 65%;\n}\n\n#ktwcqkhjih .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ktwcqkhjih .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ktwcqkhjih .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ktwcqkhjih .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ktwcqkhjih .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ktwcqkhjih .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ktwcqkhjih .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#ktwcqkhjih .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#ktwcqkhjih div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"ID\">ID</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Age.group\">Age.group</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Sex\">Sex</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Number.of.long-term.conditions\">Number.of.long-term.conditions</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Lives.alone\">Lives.alone</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Total.cost\">Total.cost</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"ID\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Age.group\" class=\"gt_row gt_right\">50-64</td>\n<td headers=\"Sex\" class=\"gt_row gt_left\">Male</td>\n<td headers=\"Number.of.long-term.conditions\" class=\"gt_row gt_right\">0</td>\n<td headers=\"Lives.alone\" class=\"gt_row gt_left\">No</td>\n<td headers=\"Total.cost\" class=\"gt_row gt_left\">Â£93</td></tr>\n    <tr><td headers=\"ID\" class=\"gt_row gt_right\">2</td>\n<td headers=\"Age.group\" class=\"gt_row gt_right\">65-74</td>\n<td headers=\"Sex\" class=\"gt_row gt_left\">Female</td>\n<td headers=\"Number.of.long-term.conditions\" class=\"gt_row gt_right\">1</td>\n<td headers=\"Lives.alone\" class=\"gt_row gt_left\">Yes</td>\n<td headers=\"Total.cost\" class=\"gt_row gt_left\">Â£0</td></tr>\n    <tr><td headers=\"ID\" class=\"gt_row gt_right\">3</td>\n<td headers=\"Age.group\" class=\"gt_row gt_right\">50-64</td>\n<td headers=\"Sex\" class=\"gt_row gt_left\">Male</td>\n<td headers=\"Number.of.long-term.conditions\" class=\"gt_row gt_right\">4</td>\n<td headers=\"Lives.alone\" class=\"gt_row gt_left\">No</td>\n<td headers=\"Total.cost\" class=\"gt_row gt_left\">Â£1065</td></tr>\n    <tr><td headers=\"ID\" class=\"gt_row gt_right\">4</td>\n<td headers=\"Age.group\" class=\"gt_row gt_right\">85+</td>\n<td headers=\"Sex\" class=\"gt_row gt_left\">Female</td>\n<td headers=\"Number.of.long-term.conditions\" class=\"gt_row gt_right\">5</td>\n<td headers=\"Lives.alone\" class=\"gt_row gt_left\">Yes</td>\n<td headers=\"Total.cost\" class=\"gt_row gt_left\">Â£7210</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nFor the purposes of this blog, we'll use a sample of 5000 (out of 114,000) individuals, with some changes to the values to ensure anonymity.\n\n# Descriptive stats\n\nThe first thing we'll look at is whether people who live alone are different. I find descriptive tables fiddly so often use a function that can be re-used across a number of variables:\n\n::: aside\n{data.table} imports the 5000 rows very quickly but note that the object created, `d`, is a `data.table` and will act differently to a `data.frame` or `tibble`.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# change your working directory to the place you've saved it and build the path to it using the {here} package which locates the RProj file of a project rather than requiring `setwd()` which can often be difficult to use with network drives when the start `\\\\`\n\nlibrary(data.table) # useful for efficient reading and summarising of data\n\nd <- fread(paste0(here::here(), \"/blog/data/sample_lbbd_dataset.csv\"))\n\n# describe age, sex and number of long-term conditions\ndescribe.by.isolation <- function(variable) {\n  a <- table(unlist(d[, variable, with = F]), d$livesalone)\n  p <- round(prop.table(a, 2) * 100, 0)\n  matrix(paste0(a, \" (\", p, \")\"), ncol = 2, dimnames = list(row.names(a), c(\"Live with others\", \"Lives alone\")))\n}\n\nlapply(c(\"age_grp\", \"sex\", \"LTC_grp\"), describe.by.isolation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n      Live with others Lives alone\n50-64 \"2514 (65)\"      \"425 (37)\" \n65-74 \"825 (21)\"       \"277 (24)\" \n75-84 \"370 (10)\"       \"255 (22)\" \n85+   \"150 (4)\"        \"184 (16)\" \n\n[[2]]\n       Live with others Lives alone\nFemale \"1946 (50)\"      \"663 (58)\" \nMale   \"1913 (50)\"      \"478 (42)\" \n\n[[3]]\n   Live with others Lives alone\n0  \"1368 (35)\"      \"305 (27)\" \n1  \"1159 (30)\"      \"329 (29)\" \n2  \"727 (19)\"       \"228 (20)\" \n3+ \"605 (16)\"       \"279 (24)\" \n```\n\n\n:::\n\n```{.r .cell-code}\n# describe healthcare costs\nd[, .(mean_cost = mean(cost), sd = sd(cost), med_cost = median(cost), iqr = IQR(cost)), livesalone]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   livesalone mean_cost        sd med_cost      iqr\n       <lgcl>     <num>     <num>    <num>    <num>\n1:      FALSE  2367.962  7951.524  469.500 1272.878\n2:       TRUE  4715.150 11527.056  780.989 2899.131\n```\n\n\n:::\n\n```{.r .cell-code}\npar(mfrow = c(2, 1), mar = c(3, 3, 2, 0))\n\nhist(log(d$cost[d$livesalone] + 1), main = \"Lives alone\", xlab = \"Log cost + 1\", col = \"red\", xlim = c(0, 14))\n\nhist(log(d$cost[!d$livesalone] + 1), main = \"Does not live alone\", xlab = \"Log cost + 1\", col = \"green\", xlim = c(0, 14))\n```\n\n::: {.cell-output-display}\n![](exact-matching-in-r_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nPeople who live alone are older, more likely to be female and have more long-term health problems. Their mean healthcare costs are Â£2,347 higher. The difference in healthcare costs is visible on the histograms, which we have displayed on a log scale because some values are extremely high. There's some â€˜zero inflation' in both groups â€“ people with no healthcare costs who do not fit into the otherwise lognormal-ish distribution. So far not too surprising â€“ but are the increased healthcare costs explained by the differences in age, sex and health?\n\n# Regression\n\nOne approach would be to use regression. We could fit a linear model â€“ this is actually not a great fit for patients with higher healthcare costs, but we won't go into that here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_model <- lm(cost ~ livesalone + age_grp + sex + LTC_grp, d)\n\nplot(linear_model) # diagnostics show that a linear model is not a great fit. You might have to press return to see all the plots before you can continue.\n```\n\n::: {.cell-output-display}\n![](exact-matching-in-r_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](exact-matching-in-r_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](exact-matching-in-r_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](exact-matching-in-r_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(linear_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = cost ~ livesalone + age_grp + sex + LTC_grp, data = d)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-12101  -2540   -847    -97 167419 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       621.0      257.2   2.415  0.01579 *  \nlivesaloneTRUE    891.7      300.8   2.965  0.00305 ** \nage_grp65-74      287.6      307.5   0.935  0.34962    \nage_grp75-84     1928.9      395.0   4.884 1.07e-06 ***\nage_grp85+       5809.5      518.4  11.208  < 2e-16 ***\nsexMale          -424.8      242.5  -1.752  0.07985 .  \nLTC_grp1          733.6      305.2   2.403  0.01629 *  \nLTC_grp2         2572.9      350.6   7.339 2.51e-13 ***\nLTC_grp3+        4977.0      372.0  13.381  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8522 on 4991 degrees of freedom\nMultiple R-squared:  0.09449,\tAdjusted R-squared:  0.09304 \nF-statistic:  65.1 on 8 and 4991 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\nThe results suggest that health and care costs for people who live alone are Â£892 more than those who do not live alone, on average. Clearly the variables we added to the model are important confounders, as this is much lower than the â€˜crude' difference of Â£2,347. Two limitations of this approach are that we will have to think quite carefully about the fit of the model to the data, and that we can't describe how living alone affects the distribution of costs.\n\n# Exact matching\n\nWe therefore used exact matching, in which each individual who lives alone is matched to an individual who does not live alone, based on specified variables such as age group and sex. We developed a function that does this by stratifying the data and then matching â€˜cases' and â€˜controls' randomly. Unmatched individuals are deleted from the dataset, leaving a dataset that is balanced in terms of the variables you specify. Let me know here if there's any other functionality you want and we can try and incorporate it.\n\nLet's try matching on age group, sex and the grouped number of long-term conditions:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#' @param data dataset containing:\n#' @param treat treatment/exposure variable 'mvar' (a string specifying variable name).\n#' @param mvar matching variable 'mvar' (a string specifying variable name). If you want to match on multiple variables, concatenate them first.\n#' @param ratio controls (an integer > 0)\n#' @param seed for fixing random selection of cases/controls (an integer; default NULL means no seed). Choice of seed is arbitrary.\n#'\n#' @return data.table of matched observations, with additional variable 'id' for use in paired/grouped analyses\n\nsmatch <- function(data, treat, mvar, ratio = 1, seed = NULL) {\n  setnames(data, mvar, \".mvar\")\n  targ <- data[, .(case = sum(get(treat)), control = sum(!get(treat))), .mvar]\n  targ[, cst := floor(pmin(control / ratio, case))]\n  targ[, cnt := cst * ratio]\n  targ <- targ[cst > 0]\n  l2 <- cumsum(targ$cst)\n  ids <- mapply(\":\", c(0, l2[-nrow(targ)]), l2 - 1)\n  names(ids) <- targ$.mvar\n  case <- NULL\n  control <- NULL\n  \n  x <- withr::with_preserve_seed(runif(seed))\n  \n  for (i in targ$.mvar) {\n    case[[i]] <- data[get(treat) == T & .mvar == i][sample(.N, targ$cst[targ$.mvar == i])]\n    case[[i]][, id := ids[[i]]]\n    control[[i]] <- data[get(treat) == F & .mvar == i][sample(.N, targ$cnt[targ$.mvar == i])]\n    control[[i]][, id := rep(ids[[i]], each = ratio)]\n  }\n  rbindlist(c(case, control))\n}\n\n# create a single variable summarising matching variables\nd$mvar <- do.call(\"paste0\", d[, c(\"age_grp\", \"sex\", \"LTC_grp\")])\n\n# create 1:1 matched dataset.\nmatched_data <- smatch(d, treat = \"livesalone\", mvar = \"mvar\", ratio = 1, seed = 74)\n\n# check balance: same number of individuals in each group\ndcast(matched_data, age_grp + sex + LTC_grp ~ livesalone, value.var = \"id\", fun.aggregate = length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nKey: <age_grp, sex, LTC_grp>\n    age_grp    sex LTC_grp FALSE  TRUE\n     <char> <char>  <char> <int> <int>\n 1:   50-64 Female       0    62    62\n 2:   50-64 Female       1    65    65\n 3:   50-64 Female       2    31    31\n 4:   50-64 Female      3+    24    24\n 5:   50-64   Male       0   100   100\n 6:   50-64   Male       1    76    76\n 7:   50-64   Male       2    40    40\n 8:   50-64   Male      3+    27    27\n 9:   65-74 Female       0    39    39\n10:   65-74 Female       1    46    46\n11:   65-74 Female       2    31    31\n12:   65-74 Female      3+    41    41\n13:   65-74   Male       0    32    32\n14:   65-74   Male       1    34    34\n15:   65-74   Male       2    22    22\n16:   65-74   Male      3+    32    32\n17:   75-84 Female       0    30    30\n18:   75-84 Female       1    45    45\n19:   75-84 Female       2    38    38\n20:   75-84 Female      3+    58    58\n21:   75-84   Male       0    10    10\n22:   75-84   Male       1    24    24\n23:   75-84   Male       2    15    15\n24:   75-84   Male      3+    27    27\n25:     85+ Female       0    11    11\n26:     85+ Female       1    19    19\n27:     85+ Female       2    11    11\n28:     85+ Female      3+    23    23\n29:     85+   Male       0     5     5\n30:     85+   Male       1     8     8\n31:     85+   Male       2    13    13\n32:     85+   Male      3+    13    13\n    age_grp    sex LTC_grp FALSE  TRUE\n```\n\n\n:::\n:::\n\n\nNow we have a dataset that is balanced in terms of age, sex and the count of long-term conditions. Let's see how healthcare costs compare:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmatched_data[, .(mean_cost = mean(cost), sd = sd(cost), med_cost = median(cost), iqr = IQR(cost)), livesalone]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   livesalone mean_cost        sd med_cost      iqr\n       <lgcl>     <num>     <num>    <num>    <num>\n1:       TRUE  4248.037 10804.742 730.1007 2469.241\n2:      FALSE  3383.810  9362.913 669.2357 1967.224\n```\n\n\n:::\n\n```{.r .cell-code}\n# histograms of cost\npar(mfrow = c(2, 1), mar = c(3, 3, 2, 0))\n\nhist(log(matched_data$cost[d$livesalone] + 1), main = \"Lives alone\", xlab = \"Log cost + 1\", col = \"red\", xlim = c(0, 14))\n\nhist(log(matched_data$cost[!d$livesalone] + 1), main = \"Does not live alone\", xlab = \"Log cost + 1\", col = \"green\", xlim = c(0, 14))\n```\n\n::: {.cell-output-display}\n![](exact-matching-in-r_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# t-test (in reality you might want a paired test, and to check whether a t-test is appropriate)\nt.test(cost ~ livesalone, matched_data) # notice how wide the confidence intervals are for this reduced dataset\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  cost by livesalone\nt = -1.9606, df = 2060.3, p-value = 0.05006\nalternative hypothesis: true difference in means between group FALSE and group TRUE is not equal to 0\n95 percent confidence interval:\n -1728.6837721     0.2281226\nsample estimates:\nmean in group FALSE  mean in group TRUE \n           3383.810            4248.037 \n```\n\n\n:::\n\n```{.r .cell-code}\n# proportion with costs over Â£10000\nmatched_data[, .(over10k = sum(cost > 10000) / .N), livesalone]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   livesalone    over10k\n       <lgcl>      <num>\n1:       TRUE 0.10551331\n2:      FALSE 0.08555133\n```\n\n\n:::\n:::\n\n\nThe mean difference is Â£803. When we used the whole dataset, this value was even closer to the coefficient from linear regression. It's now difficult to see a difference in the histograms, but you can easily create any description of the distribution that you like â€“ for example the proportion of patients that have costs over Â£10,000.\n\n# Who got matched and who didn't?\n\nThe point of matching was to create a comparison group of people who don't live alone who were in some ways similar to the group who do. We probably had to delete lots of people who don't live alone in a systematic way (for example men and younger people who do not live alone were more likely to be deleted). We might also have deleted some of the group who do live alone, which could be more problematic if we want to generalise our results to the population. Let's see who got deleted...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd[, matched := ifelse(PID %in% matched_data$PID, \"matched\", \"unmatched\")]\n\n# just looking at age group for now\ncompare_matched <- dcast(d, age_grp ~ livesalone + matched, value.var = \"PID\")\ncompare_matched[, \"TRUE_total\" := TRUE_matched + TRUE_unmatched]\ncompare_matched[, lapply(.SD, function(x) x / sum(x) * 100), .SDcols = 2:6]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   FALSE_matched FALSE_unmatched TRUE_matched TRUE_unmatched TRUE_total\n           <num>           <num>        <num>          <num>      <num>\n1:     40.399240       74.421090    40.399240       0.000000   37.24803\n2:     26.330798       19.522622    26.330798       0.000000   24.27695\n3:     23.479087        4.381902    23.479087       8.988764   22.34882\n4:      9.790875        1.674385     9.790875      91.011236   16.12621\n```\n\n\n:::\n:::\n\n\nYou can see that some of the â€˜lives alone' group got deleted (`TRUE_unmatched`), and they were all in the older age groups. The difference between everyone who lives alone (`TRUE_total`) and the matched group (`TRUE_matched`) is diluted, because the oldest groups are a relatively small part of the data. Nonetheless, I would say this is a fairly important difference. If you are concerned about generalisability to the population, you might want to restrict the analysis to people aged under 85. In the full dataset this was not be a problem (as there were lots more potential â€˜controls'), but you might encounter similar issues if you match on more detailed variables.\n\n**Final point!** We've focused on a technical solution to exact matching. We haven't really thought about which variables we should be matching on. This is a matter of judgement, and needs a bit of thinking before we dive into the matching process. Just like covariates in regression, the matching variables are confounders â€“ they're alternative explanations for an association between living alone and healthcare costs. Age and sex are clearly important. Health status is more complex. Do you want to think about long-term conditions as something that cause people to live alone, or the product of living alone? If people are sicker because they live alone, matching on the number of long term conditions might falsely reduce the association between living alone and healthcare costs.\n\nThis blog was written by Dan Lewer, NIHR Doctoral Research Fellow / SpR Public Health. Department of Epidemiology & Public Health, UCL\n\nThis blog has been formatted to remove [Latin Abbreviations](https://nhsrway.nhsrcommunity.com/style-guides.html#avoid-latin-abbreviation).\n",
    "supporting": [
      "exact-matching-in-r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}