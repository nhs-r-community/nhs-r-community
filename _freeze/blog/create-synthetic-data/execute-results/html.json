{
  "hash": "9756d844a83060f99449a7286c649579",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Creating synthetic data using the synthpop package\"\ndate: \"1 October 2024\"\ncategories:\n  - Data\nimage: img/natural-bricks.jpg\nimage-alt: \"Photo of two brick walls facing each other and with perspective seem to be closer to each other at the furthest point\"\nauthors: \n  - name: Dr Muhammad Faisal\n  - name: Gary Hutson\n  - name: Professor Mohammed A Mohammed\n---\n\nThis blog was originally a vignette in the NHSRdatasets package and refers to the [synthetic data in that package](https://nhs-r-community.github.io/NHSRdatasets/articles/synthetic_news_data.html) for NEWS (National Early Warning Score).\n\n## What is Synthetic data?\n\nThe goal is to generate a data set which contains no real units, therefore safe for public release and retains the structure of the data.\n\nIn other words, one can say that synthetic data contains all the characteristics of original data minus the sensitive content. \n\nSynthetic data is generally made to validate mathematical models. This data is used to compare the behaviour of the real data against the one generated by the model.\n\n## How we generate synthetic data?\n\nThe principle is to observe real-world statistic distributions from the original data and reproduce fake data by drawing simple numbers.\n\nConsider a data set with $p$  variables. In a nutshell, synthesis follows these steps:\n\n1.\tTake a simple random sample of $x_{1,obs}$  and set as $x_{1,syn}$ \n2.\tFit model $f(x_{2,obs}|x_{1,obs})$  and draw $x_{2,syn}$  from  $f(x_{2,syn}|x_{1,syn})$\n3.\tFit model  $f(x_{3,obs}|x_{1,obs},x_{2,obs})$ and draw $x_{3,syn}$  from   $f(x_{3,syn}|x_{1,syn},x_{2,syn})$\n4.\tAnd so on, until $f(x_{p,syn}|x_{1,syn},x_{2,syn},...,x_{p-1,syn})$ \n\nFitting statistical models to the original data and generating completely new records for public release. \nJoint distribution $f(x_1,x_2,x_3,…,x_p)$ is approximated by a set of conditional distributions $f(x_2|x_1)$.\n\n## Synthetic data generation - National early warning score (NEWS) utilising real data\n\nThe data this is based on is the [NEWS](https://www.rcplondon.ac.uk/projects/outputs/national-early-warning-score-news-2) Score devised by the Royal College of Physicians.\n\nSynthetic data can be generated from new data, utilising the above methodology, on the real observed data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\ndf <- suppressWarnings(read_csv(\"https://raw.githubusercontent.com/StatsGary/SyntheticNEWSData/main/observed_news_data.csv\") %>%\n  dplyr::select(everything(), -X1))\n\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,000\nColumns: 12\n$ male  <dbl> 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1…\n$ age   <dbl> 68, 94, 85, 44, 77, 58, 25, 69, 91, 70, 87, 93, 61, 75, 97, 80, …\n$ NEWS  <dbl> 3, 1, 0, 0, 1, 1, 4, 0, 1, 1, 7, 2, 5, 1, 1, 3, 1, 5, 0, 2, 1, 2…\n$ syst  <dbl> 150, 145, 169, 154, 122, 146, 65, 116, 162, 132, 110, 166, 123, …\n$ dias  <dbl> 98, 67, 69, 106, 67, 106, 42, 56, 72, 96, 85, 90, 78, 80, 72, 81…\n$ temp  <dbl> 36.8, 35.0, 36.2, 36.9, 36.4, 35.3, 35.6, 37.2, 35.5, 35.3, 37.0…\n$ pulse <dbl> 78, 62, 54, 80, 62, 73, 72, 90, 60, 67, 95, 87, 93, 65, 89, 145,…\n$ resp  <dbl> 26, 18, 18, 17, 20, 20, 12, 16, 16, 16, 24, 16, 26, 12, 16, 16, …\n$ sat   <dbl> 96, 96, 96, 96, 95, 98, 99, 97, 99, 97, 87, 95, 96, 96, 98, 99, …\n$ sup   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0…\n$ alert <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ died  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n```\n\n\n:::\n:::\n\n\nThis reads in the observed NEWS data from the GitHub repository. Now, we will utilise the `synthpop` package to create a synthetically generated dataset. \n\n## Generating synthetic NEWS dataset using synthpop package\n\nAs stated, now we will use the real observed data and generate a synthetic set, utilising the equations and process mapped out in the preceding sections:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(synthpop)\nsyn_df <- syn(df, seed = 4321)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nWarning: In your synthesis there are numeric variables with 5 or fewer levels: male, sup, alert, died.\nConsider changing them to factors. You can do it using parameter 'minnumlevels'.\n\nSynthesis\n-----------\n male age NEWS syst dias temp pulse resp sat sup\n alert died\n```\n\n\n:::\n\n```{.r .cell-code}\n#### synthetic data\nsynthetic_news_data <- syn_df$syn\nglimpse(synthetic_news_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,000\nColumns: 12\n$ male  <dbl> 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1…\n$ age   <dbl> 56, 50, 74, 56, 52, 21, 37, 81, 67, 67, 56, 48, 76, 57, 43, 58, …\n$ NEWS  <dbl> 1, 2, 6, 1, 0, 2, 1, 2, 5, 0, 1, 1, 0, 1, 1, 1, 1, 1, 3, 0, 1, 6…\n$ syst  <dbl> 126, 115, 143, 122, 153, 164, 101, 125, 182, 160, 142, 122, 132,…\n$ dias  <dbl> 84, 84, 86, 60, 89, 92, 57, 74, 103, 80, 113, 71, 59, 71, 89, 11…\n$ temp  <dbl> 35.7, 36.8, 36.5, 36.3, 36.2, 35.5, 35.6, 36.6, 37.1, 36.2, 35.3…\n$ pulse <dbl> 72, 94, 82, 94, 78, 97, 76, 71, 95, 86, 73, 62, 88, 70, 63, 100,…\n$ resp  <dbl> 17, 14, 21, 12, 12, 20, 15, 17, 18, 18, 18, 16, 19, 16, 18, 18, …\n$ sat   <dbl> 98, 97, 93, 98, 96, 99, 98, 97, 94, 98, 98, 100, 99, 97, 97, 96,…\n$ sup   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1…\n$ alert <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ died  <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0…\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n# Create temperature tibbles to compare observed vs synthetically generated labels\nobs <- tibble(label = \"observed_data\", value = df$temp)\nsynth <- tibble(label = \"synthetic_data\", value = synthetic_news_data$temp)\n\n# Merge the frames together to get a comparison\nmerged <- obs %>%\n  bind_rows(synth)\n\n# Create the plot\nplot <- merged %>%\n  ggplot(aes(value, fill = label)) +\n  geom_histogram(alpha = 0.9, position = \"identity\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"#BCBDC1\", \"#2061AC\")) +\n  labs(\n    title = \"Observed vs Synthetically NEWS values\",\n    subtitle = \"Based on NEWS Temperature score\",\n    x = \"NEWS Temperature Score\", y = \"Score frequency\"\n  ) +\n  theme(legend.position = \"none\")\n\nprint(plot)\n```\n\n::: {.cell-output-display}\n![](create-synthetic-data_files/figure-html/visuals-1.png){width=672}\n:::\n:::\n\n\n",
    "supporting": [
      "create-synthetic-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}