{
  "hash": "8267f56af98404759dffd1da225a0465",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A simple function to install and load packages in R\"\ndate: \"17 August 2018\"\ndate-modified: \"23 March 2024\"\ncategories:\n  - Packages\nauthor: Gary Hutson\nsubtitle: >\n  \"A function to install packages if needed and load at the same time.\"\n---\n\nI was starting to despair at the amount of packages I end up using during the task of transforming, cleaning, modelling and validating some of my models. I thought there must be a simple approach to dealing with this?\n\nSo, I started to ponder if I could create a function that would just install and then load the packages straight into R in one go. I found the solution and it can be applied to all your projects – all you have to do is supply the list of packages to the function and “hey presto!”\n\nRun the below function and I will explain what this does:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall_or_load_pack <- function(pack) {\n  create.pkg <- pack[!(pack %in% installed.packages()[, \"Package\"])]\n\n  if (length(create.pkg)) {\n    install.packages(create.pkg, dependencies = TRUE)\n  }\n\n  sapply(pack, require, character.only = TRUE)\n\n  # I know I should be using purr here, but this is before the Tidyverse is loaded. I know you Tidyverse trend setters will have me here.\n}\n```\n:::\n\n\nThis creates a function, in which, you can pass a vector of packages you want to load. The sweet point with this function is that if the packages are not installed, this function will do that and then load them, so the next time you come to using the function it will just load them into your project – instead of installing them. I said it was cool, or I thought you might find it cooler than I expected, either way I still think it's cool.\n\nThe last step is to make a call to the function and specify the list of packages you need:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npackages <- c(\"ggplot2\", \"plotly\", \"data.table\", \"tidyverse\", \"caret\")\n\ninstall_or_load_pack(packages)\n```\n:::\n\n\nIf the packages are not installed then this will show an installation series in the console window, otherwise it will just flag a Boolean value to show that they are now active in the project:\n\n```\n\n   ggplot2     plotly data.table  tidyverse      caret \n      TRUE       TRUE       TRUE       TRUE       TRUE \n\n```\n\nThis blog was written by Gary Hutson, Principal Analyst, Activity & Access Team, Information & Insight at Nottingham University Hospitals NHS Trust, and was originally posted on [Hutson Hacks](https://hutsons-hacks.info/a-simple-function-to-install-and-load-packages-in-r).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}